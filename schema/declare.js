
require('dotenv').config()
const knex = require('../src/lib/knex')

async function up () {
  const result = await knex.schema.withSchema('BUSNESS')
    .createTable('DecHead', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('AgentCode', 10).comment('申报单位代码').notNullable()
      table.string('AgentName', 60).comment('申报单位名称').notNullable()
      table.string('ApprNo', 30).comment('批准文号')
      table.string('BillNo', 32).comment('提单号')
      table.string('ContrNo', 32).comment('合同号')
      table.string('CopCode', 9).comment('录入单位代码').notNullable()
      table.string('CopName', 70).comment('录入单位名称').notNullable()
      table.string('CustomMaster', 4).comment('主管海关').notNullable()
      table.string('CutMode', 3).comment('征免性质')
      table.string('DataSource', 5).comment('数据来源')
      table.string('DeclTrnRel', 1).comment('报关/转关关系标志').notNullable()
      table.string('DistinatePort', 4).comment('装货港')
      table.string('DistrictCode', 5).comment('境内目的地')
      table.string('EdiId', 1).comment('报关标志')
      table.string('EntryId', 18).comment('海关编号')
      table.string('EntryType', 1).comment('报关单类型')
      table.string('FeeCurr', 3).comment('运费币制')
      table.string('FeeMark', 1).comment('运费标记')
      table.decimal('FeeRate', 19, 7).comment('运费/率')
      table.decimal('GrossWet', 19, 5).comment('毛重')
      table.date('IEDate').comment('进出口日期')
      table.string('IEFlag', 1).comment('进出口标志').notNullable()
      table.string('IEPort', 4).comment('进出口岸')
      table.string('InputerName', 32).comment('录入员名称').notNullable()
      table.decimal('InRatio', 19, 5).comment('进口征税比例')
      table.string('InsurCurr', 3).comment('保险费币制')
      table.string('InsurMark', 1).comment('保险费标记')
      table.decimal('InsurRate', 19, 5).comment('保险费/率')
      table.string('LicenseNo', 20).comment('许可证编号')
      table.string('ManualNo', 12).comment('备案号')
      table.decimal('NetWt', 19, 5).comment('净重')
      table.string('NoteS', 70).comment('备注')
      table.string('OtherCurr', 3).comment('杂费币制')
      table.string('OtherMark', 1).comment('杂费标志')
      table.decimal('OtherRate', 19, 5).comment('杂费/率')
      table.string('OwnerCode', 10).comment('货主单位代码')
      table.string('OwnerName', 60).comment('货主单位名称')
      table.integer('PackNo').comment('件数')
      table.string('PayWay', 1).comment('出口结汇方式')
      table.string('PaymentMark', 1).comment('纳税单位')
      table.string('PartenerID', 20).comment('申报人标识')
      table.date('PDate').comment('预录入日期')
      table.string('Risk', 10).comment('风险评估参数')
      table.string('SeqNo', 18).comment('数据中心统一编号')
      table.string('TgdNo', 18).comment('通关申请单号')
      table.string('TradeCountry', 3).comment('贸易国别')
      table.string('TradeMode', 4).comment('贸易方式')
      table.string('TradeName', 60).comment('经营单位名称').notNullable()
      table.string('TrafMode', 1).comment('运输方式代码')
      table.string('TrafName', 26).comment('运输工具名称')
      table.string('TransMode', 1).comment('成交方式')
      table.string('Type', 2).comment('EDI申报备注')
      table.string('TypistNo', 30).comment('录入员IC卡号').notNullable()
      table.string('WrapType', 1).comment('包装种类')
      table.string('ChkSurety', 1).comment('担保验放标志')
      table.string('BillType', 1).comment('备案清单类型')
      table.string('TradeCoScc', 18).comment('经营单位统一编码')
      table.string('AgentCodeScc', 18).comment('申报代码统一编码')
      table.string('OwnerCodeScc', 18).comment('货主单位统一编码')
      table.string('CopCodeScc', 18).comment('录入单位统一编码')
      table.string('PromiseItmes', 32).comment('承诺事项').notNullable()
      table.string('TradeAreaCode', 3).comment('贸易国别').notNullable()
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.string('Group', 10)
      table.primary(['PreEntryId', 'TradeCode'])
      table.index('IEDate')
      table.index('PDate')
      table.index('EntryId')
      table.index('SeqNo')
    })
    .createTable('DecList', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.integer('GNo').comment('商品序号').notNullable()
      table.string('ClassMark', 1).comment('归类标志')
      table.string('CodeTS', 10).comment('商品编号').notNullable()
      table.integer('ContrItem').comment('备案序号')
      table.decimal('DeclPrice', 19, 4).comment('申报单价')
      table.decimal('DeclTotal', 19, 4).comment('申报总价')
      table.string('DutyMode', 1).comment('征减免税方式')
      table.string('ExgNo', 30).comment('货号')
      table.string('ExgVersion', 8).comment('版本号')
      table.decimal('Factor', 10, 3).comment('申报/法定单位比例因子')
      table.string('FirstUnit', 3).comment('第一计量单位')
      table.decimal('FirstQty', 19, 5).comment('第一法定数量')
      table.string('GUnit', 3).comment('申报计量单位')
      table.string('GModel', 255).comment('商品规格、型号')
      table.string('GName', 255).comment('商品名称')
      table.decimal('GQty', 19, 5).comment('申报数量')
      table.string('OriginCountry', 3).comment('原产地')
      table.string('SecondUnit', 3).comment('第二计量单位')
      table.decimal('SecondQty', 19, 5).comment('第二法定数量')
      table.string('TradeCurr', 3).comment('成交币制')
      table.string('UseTo', 2).comment('用途/生产厂家')
      table.decimal('WorkUsd', 19, 5).comment('工缴费')
      table.string('DestinationCountry', 3).comment('最终目的国（地区）').notNullable()
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.primary(['PreEntryId', 'TradeCode', 'GNo'])
      table.index('CodeTS')
    })
    .createTable('DecContainer', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('ContainerId', 11).comment('集装箱号').notNullable()
      table.string('ContainerMd', 1).comment('集装箱规格')
      table.decimal('ContainerWt', 19, 5).comment('集装箱自重')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
      table.index('ContainerId')
    })
    .createTable('DecLicenseDocus', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('DocuCode', 1).comment('单证代码').notNullable()
      table.string('CertCode', 32).comment('单证编号')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
    })
    .createTable('DecFreeTxt', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('BonNo', 32).comment('监管仓号')
      table.string('CusFie', 8).comment('货场代码')
      table.string('DecBpNo', 32).comment('报关员联系方式')
      table.string('DecNo', 13).comment('报关员号')
      table.string('RelId', 18).comment('关联报关单号')
      table.string('RelManNo', 12).comment('关联备案号')
      table.string('VoyNo', 32).comment('航次号')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
    })
    .createTable('DecSign', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('OperType', 1).comment('操作类型').notNullable()
      table.string('ICCode', 13).comment('操作员IC卡号').notNullable()
      table.string('OperName', 32).comment('操作员姓名').notNullable()
      table.string('CopCode', 9).comment('操作企业组织机构代码').notNullable()
      table.string('ClientSeqNo', 18).comment('客户端报关单编号').notNullable()
      table.string('Sign', 201).comment('数字签名信息').notNullable()
      table.date('SignDate').comment('签名日期').notNullable()
      table.string('HostId', 10).comment('客户端邮箱的HostId').notNullable()
      table.string('Certificate', 20).comment('操作员卡的证书号').notNullable()
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
    })
    .createTable('TrnHead', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('TrnPreId', 18).comment('转关单统一编号')
      table.string('TransNo', 16).comment('载货清单号')
      table.string('TurnNo', 16).comment('转关申报单号')
      table.string('NativeTrafMode', 1).comment('境内运输方式')
      table.string('TrafCustomsNo', 13).comment('境内运输工具编号')
      table.string('NativeShipName', 30).comment('境内运输工具名称')
      table.string('NativeVoyageNo', 32).comment('境内运输工具航次')
      table.string('ContractorName', 70).comment('承运单位名称')
      table.string('ContractorCode', 10).comment('承运单位组织机构代码')
      table.string('TransFlag', 2).comment('转关类型')
      table.string('ValidTime', 8).comment('预计运抵指运地时间')
      table.string('ESealFlag', 1).comment('是否启用电子关锁标志')
      table.string('Notes', 200).comment('备注')
      table.string('TrnType', 1).comment('转关单类型')
      table.string('ApplCodeScc', 18).comment('转关申报单位统一代码')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
      table.index('TurnNo')
    })
    .createTable('TrnList', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('TrafMode', 1).comment('进出境运输方式')
      table.string('ShipId', 32).comment('进出境运输工具编号')
      table.string('ShipNameEn', 255).comment('进出境运输工具名称')
      table.string('VoyageNo', 32).comment('进出境运输工具航次')
      table.string('BillNo', 32).comment('提单号')
      table.date('IEDate').comment('实际进出境日期')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
      table.index('BillNo')
    })
    .createTable('TrnContainer', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('ContaNo', 11).comment('集装箱号').notNullable()
      table.string('ContaSn', 3).comment('集装箱序号')
      table.string('ContaModel', 4).comment('集装箱规格')
      table.string('SealNo', 128).comment('电子关锁号')
      table.string('TransName', 32).comment('境内运输工具名称')
      table.decimal('TransWeight', 19, 4).comment('工具实际重量')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
      table.index('ContaNo')
      table.index('SealNo')
    })
    .createTable('TrnContaGoodsList', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.integer('GNo').comment('商品序号').notNullable()
      table.string('ContaNo', 11).comment('集装箱号').notNullable()
      table.integer('ContaGoodsCount').comment('商品件数')
      table.decimal('ContaGoodsWeight', 19, 4).comment('商品重量')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
      table.index('ContaNo')
    })
    .createTable('EdocRealation', function (table) {
      table.string('PreEntryId', 20).comment('预录入编号').notNullable()
      table.string('TradeCode', 10).comment('经营单位编号').notNullable()
      table.string('EdocID', 64).comment('随附单据编号').notNullable()
      table.string('EdocCode', 8).comment('随附单据类别').notNullable()
      table.string('EdocFomatType', 2).comment('随附单据格式类型').notNullable()
      table.string('OpNote', 255).comment('操作说明')
      table.string('EdocCopId', 64).comment('随附单据文件企业名')
      table.string('EdocOwnerCode', 10).comment('所属单位海关编号').notNullable()
      table.string('SignUnit', 10).comment('签名单位代码')
      table.date('SignTime').comment('签名时间').notNullable()
      table.string('EdocOwnerName', 100).comment('所属单位名称')
      table.string('EdocSize', 12).comment('文件大小')
      table.date('CreateAt')
      table.string('CreateBy', 20)
      table.index(['PreEntryId', 'TradeCode'])
      table.index('EdocID')
    })
  return result
}

up().then((result) => {
  console.log('UP finished!' + result)
}).catch((err) => {
  console.log(err)
})
